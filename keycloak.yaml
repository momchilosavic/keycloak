---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: tests
  labels:
    app: keycloak
spec:
  ports:
    - name: keycloak
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: keycloak
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: tests
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      initContainers:
      - name: test-postgres-connection
        image: postgres:16.2
        command: ['/bin/bash', '-c', ". /scripts/test-connection.sh"]
        volumeMounts:
        - name: test-postgres-connection
          mountPath: "/scripts"
      - name: test-infinispan-connection
        image: curlimages/curl:8.6.0
        command: ['sh', '-c', ". /scripts/test-connection.sh"]
        volumeMounts:
        - name: test-infinispan-connection
          mountPath: "/scripts"

      containers:
        - name: keycloak
          image: keycloak/keycloak:23.0.6-0
          args:
            - start-dev
            - --db=postgres
            - --db-username=postgres
            - --db-password=postgres
            - --db-url-host=postgres.tests.svc.cluster.local
            - --db-url-port=5432
            - --db-url-database=postgres
            - --cache=ispn
            - --cache-config-file=infinispan-cache.xml
            - --hostname=a388895f6c92c48829d5174b2e67789e-f21a17167740f882.elb.eu-west-1.amazonaws.com
            - --hostname-strict=false
            - --proxy=edge
            - --http-enabled=true
            - --health-enabled=true
          ports:
            - name: keycloak
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            failureThreshold: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            failureThreshold: 10
            periodSeconds: 10
          env:
            - name: KEYCLOAK_ADMIN
              value: keycloak
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: keycloak
          volumeMounts:
            - mountPath: /opt/keycloak/conf/infinispan-cache.xml
              subPath: infinispan-cache.xml
              name: keycloak-cache
              readOnly: true
      volumes:
        - name: keycloak-cache
          configMap:
            name: keycloak-cache
            items:
              - key: infinispan-cache.xml
                path: infinispan-cache.xml
        - name: test-postgres-connection
          configMap:
            name: test-postgres-connection
        - name: test-infinispan-connection
          configMap:
            name: test-infinispan-connection

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-infinispan-connection
  namespace: tests
data:
  test-connection.sh: |
    #!/bin/bash
    url="http://infinispan:11222/rest/v2/cache-managers/remoteKeycloak/health/status"
    max_attempts=10
    attempt=1
    while true; do
        response=$(curl -s -o /dev/null -2 -w "%{http_code}" $url)
        if [ "$response" = "200" ]; then
            echo "Cache ready"
            exit 0
        else
            echo "Attempt $attempt - $response"
            if [ $attempt -eq $max_attempts ]; then
                echo "Maximum number of attempts reached"
                exit 1
            fi
            attempt=$((attempt+1))
            sleep 6
        fi
    done
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-postgres-connection
  namespace: tests
data:
  test-connection.sh: |
    #!/bin/bash
    max_attempts=10
    attempt=1
    while true; do
        pg_isready -d keycloak -h postgres -p 5432 -U keycloak
        response=$(echo $?)
        if [ "$response" = "0" ]; then
            echo "Database ready"
            exit 0
        else
            echo "Attempt $attempt - $response"
            if [ $attempt -eq $max_attempts ]; then
                echo "Maximum number of attempts reached"
                exit 1
            fi
            ((attempt++))
            sleep 6
        fi
    done
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-cache
  namespace: tests
data:
  infinispan-cache.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <infinispan
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="urn:infinispan:config:14.0 http://www.infinispan.org/schemas/infinispan-config-14.0.xsd"
            xmlns="urn:infinispan:config:14.0">
        <jgroups>
            <stack name="ping-tcp" extends="tcp">
                <TCP bind_port="7800"/>
                <TCPPING
                    initial_hosts="infinispan[7800],keycloak[7800]"
                    port_range="0"
                    stack.combine="REPLACE"
                    stack.position="MPING"
                    />
            </stack>
        </jgroups>
        <cache-container name="keycloak">
            <transport cluster="${infinispan.cluster.name:ISPN}" lock-timeout="60000" stack="ping-tcp" site="site1" />
            <distributed-cache name="sessions" owners="1">
                <persistence passivation="false">
                    <remote-store xmlns="urn:infinispan:config:store:remote:14.0" cache="sessions" purge="false" preload="false" segmented="false" shared="true" raw-values="true" >
                        <remote-server host="infinispan" port="11222" />
                        <security>
                            <authentication server-name="infinispan">
                                <digest username="keycloak" password="keycloak" realm="default" />
                            </authentication>
                        </security>
                    </remote-store>
                </persistence>
            </distributed-cache>
          
            <local-cache name="users" simple-cache="true">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <memory max-count="10000"/>
            </local-cache>
            <distributed-cache name="realms" owners="2">
                <expiration lifespan="-1"/>
            </distributed-cache>
            <distributed-cache name="authenticationSessions" owners="2">
                <expiration lifespan="-1"/>
            </distributed-cache>
            <distributed-cache name="offlineSessions" owners="2">
                <expiration lifespan="-1"/>
            </distributed-cache>
            <distributed-cache name="clientSessions" owners="2">
                <expiration lifespan="-1"/>
            </distributed-cache>
            <distributed-cache name="offlineClientSessions" owners="2">
                <expiration lifespan="-1"/>
            </distributed-cache>
            <distributed-cache name="loginFailures" owners="2">
                <expiration lifespan="-1"/>
            </distributed-cache>
            <local-cache name="authorization" simple-cache="true">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <memory max-count="10000"/>
            </local-cache>
            <replicated-cache name="work">
                <expiration lifespan="-1"/>
            </replicated-cache>
            <local-cache name="keys" simple-cache="true">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <expiration max-idle="3600000"/>
                <memory max-count="1000"/>
            </local-cache>
            <distributed-cache name="actionTokens" owners="2">
                <encoding>
                    <key media-type="application/x-java-object"/>
                    <value media-type="application/x-java-object"/>
                </encoding>
                <expiration max-idle="-1" lifespan="-1" interval="300000"/>
                <memory max-count="-1"/>
            </distributed-cache>
       </cache-container>
    </infinispan>
